#include "lcd_12864.h"
#include "main.h"
#include "tim.h"

/*
* 1 out
* 0 in
*/
void set_rw_dir(uint32_t mode){
	GPIO_InitTypeDef GPIO_InitStruct;
	
	GPIO_InitStruct.Mode=mode;
	GPIO_InitStruct.Pin=LCD_RW_PIN;
	HAL_GPIO_Init(LCD_RW_PORT,&GPIO_InitStruct);
	
}

void sendbyte(uint8_t zdata){
	uint8_t i;
	//set_rw_dir(GPIO_MODE_OUTPUT_PP);
	
	for(i=0;i<8;i++){
		if((zdata << i ) & 0x80){
			LCD_RW_HIGH();
		}
		else{
			LCD_RW_LOW();
		}
		
		LCD_E_LOW();
		delay_us(15);
		LCD_E_HIGH();
	}

}

static uint8_t ReceiveByte(void)
{
   uint8_t i,d1=0,d2=0;
	
	set_rw_dir(GPIO_MODE_INPUT);
	
   for (i = 0; i < 8; i++)
   {
    LCD_E_LOW();
    delay_us(15);
    LCD_E_HIGH();
    delay_us(15);
		 
    if (LCD_RW_READ() == GPIO_PIN_SET) 
			d1++;
		
    d1 = d1<<1;
   }
   
   for (i = 0; i < 8; i++)
   {
    LCD_E_LOW();
    delay_us(15);
    LCD_E_HIGH();  
    delay_us(15);		 
		 
    if (LCD_RW_READ() == GPIO_PIN_SET)
			d2++;
		
    d2 = d2<<1;
   }
   
	 set_rw_dir(GPIO_MODE_OUTPUT_PP);
	 
   return ((d1 & 0xf0) + (d2 & 0x0f));
}

int8_t check_busy(void){
//	uint8_t data=0;
//	
//	sendbyte(READ_STATE);
//	
//	delay_us(10);
//	data=ReceiveByte();
//	
//	if(data & 0x80){
//		return 0;
//	}
//	
//	else{
//		return 0;
//	}
	delay_us(50);
	return 0;
}

void send_cmd (uint8_t cmd){
	
	LCD_RS_HIGH();
	
	while(check_busy());
	
	sendbyte(WR_CMD); 
	sendbyte(cmd & 0xf0);  
	sendbyte((cmd << 4) & 0xf0); 
	while(check_busy());
		
	LCD_RS_LOW();
}

void send_data(uint8_t data){
	LCD_RS_HIGH();
	
	while(check_busy());	
	
	sendbyte(WR_DATA); 
	sendbyte(data & 0xf0);  
	sendbyte((data & 0x0f)<<4); 
	while(check_busy());
		
	LCD_RS_LOW();
}

void lcd_init(void){
	LCD_OPEN_PW();
	//LCD_OPEN_BK();
	
	//1>鑺墖涓婄數锛�
	//2>寤舵椂40ms浠ヤ笂锛�
	//3>澶嶄綅鎿嶄綔锛歊ST鍑虹幇涓�涓笂鍗囨部锛圧ST=1;RST=0;RST=1;锛�
	HAL_Delay(50);
	
	LCD_RST_HIGH();
	HAL_Delay(50);
	LCD_RST_LOW();
	HAL_Delay(50);
	LCD_RST_HIGH();
		
	send_cmd(0x30);
	HAL_Delay(50);  
	
	send_cmd(0x0C);
	HAL_Delay(50); 
	
	send_cmd(0x01);
	HAL_Delay(50); 
		
	send_cmd(0x06); 
	HAL_Delay(50); 
		

}

void lcd_clear_ddram(void){
  send_cmd(0x01);  //鍩烘湰鎸囦护闆�
  HAL_Delay(2);        //datasheet >=1.4ms 
}

void lcd_clear_gdram(void)
{    
  uint8_t j, i;
  send_cmd(0x36);
  for(j=0;j<32;j++) //涓婂崐灞�32鐐硅
  {
    send_cmd(0x80+j);
    send_cmd(0x80);//X鍧愭爣
    for(i=0;i<32;i++)//32琛ㄧず濡�1琛屽啓瀹�,鑷姩鍐欑3琛�
    {
      send_data(0x00);  
    }
  }
  send_cmd(0x30);     //鍩烘湰鎸囦护 
}

/******************************************************************************* 
* 鍚嶇О :  lcd_set_pos
* 鍔熻兘 : 璁惧畾鏄剧ず浣嶇疆,鍙�傜敤浜庢爣鍑嗘寚浠ら泦 
* 杈撳叆 :  x (0~3)琛�
          y (0~127)鍒�
* 杈撳嚭 : 鏃� 
*******************************************************************************/  
void lcd_set_pos(uint8_t  row, uint8_t  col)  
{  
    uint8_t  pos;  
    if( row == 0)  
        row = 0x80;  
    else if(row == 1)  
        row = 0x90;  
    else if(row == 2)  
        row = 0x88;  
    else if(row == 3)  
        row = 0x98;    
	
    pos = row + col;  
    send_cmd(pos);
    delay_us(8);
} 


/******************************************************************** 
* 鍚嶇О : ShowCharPos 
* 鍔熻兘 : 鍦ㄥ綋鍓嶅潗鏍囦綅缃樉绀哄崟涓瓧绗�,col=0,1,2,姣忎釜col鍗�16dot
* 杈撳叆 : uint8_t  row, uint8_t  col,uint8_t  dat
* 杈撳嚭 : 鏃� 
***********************************************************************/ 
void show_char(uint8_t  row, uint8_t  col,uint8_t  dat)
{    
  lcd_set_pos(row, col);
  send_data(dat);
}

/******************************************************************************* 
* 鍚嶇О : ShowEnString(uint8_t  *s)  
* 鍔熻兘 : 鏄剧ず鑻辨枃瀛楃涓�  col=0,1,2,1 col=16dot
* 杈撳叆 : *s 
* 杈撳嚭 : 鏃� 
*******************************************************************************/  
void show_string(uint8_t  *s)  
{    
    uint8_t   i = 0;  
    while(s[i] != '\0')  
    {   
      send_data(s[i++]);      
    }  
}  

void lcd_show_strings(uint8_t  row, uint8_t  col, uint8_t  *s)     //col is full char wide 
{  
    uint8_t   i = 0;  
    lcd_set_pos(row, col);    
    while(s[i] != '\0')  
    {       
      send_data(s[i++]);        
      if((2*col+i)%(16)==0)     //must 16, is OK
      {          
        lcd_set_pos(++row,0);     //display start at next row.
      }
    }  
}  


/******************************************************************************* 
* 鍚嶇О : show_gb 
* 鍔熻兘 : 鏄剧ず鍗曚釜姹夊瓧
* 杈撳叆 : i 
* 杈撳嚭 : 鏃� 
********************************************************************************/  
void send_gb( unsigned char *HZ)
{
   send_data(HZ[0]);                //鍐欏叆姹夊瓧鐨勯珮鍏綅鏁版嵁
   send_data(HZ[1]);                //鍐欏叆姹夊瓧鐨勪綆鍏綅鏁版嵁 
}

void show_gb(uint8_t  row, uint8_t  col, uint8_t  *HZ)
{
   lcd_set_pos(row, col);
   send_gb(HZ);
}


/******************************************************************** 
* 鍚嶇О : show_gbs
* 鍔熻兘 : 鏄剧ず澶氫釜姹夊瓧
* 杈撳叆 : uint8_t  row, uint8_t  col :姹夊瓧涓茬殑璧峰鍦板潃
* 杈撳嚭 : 鏃� 
* 璇存槑 : 鑷姩鎹㈣:lcm榛樿鎹㈣椤哄簭鏄贡鐨勶紝0--2--1--3--0
***********************************************************************/  
void lcd_show_gbs(uint8_t  row, uint8_t  col, uint8_t  *s)
{
  uint8_t  i = 0;
  lcd_set_pos(row, col);
  while (s[i] != '\0')
  {
    send_gb(s+i);
    i+=2;   
    if((2*col+i)%(16)==0)                 //濡傛灉婊′竴琛�
    {            
       lcd_set_pos(++row,0);            //閲嶆柊璁剧疆鏄剧ず鐨勮捣濮嬪湴鍧�
    }     
  } 
}



/******************************************************************** 
* 鍚嶇О : show_blank_by_pos 
* 鍔熻兘 : 
* 杈撳叆 : col = 0~7 1num =1鍗婂瀛楃
* 鍔熻兘 : 榛戞澘鎿﹀姛鑳斤紝鎿﹂櫎涓嶆樉绀虹殑鍐呭
***********************************************************************/ 
void show_blanks(uint8_t  row, uint8_t  col, uint8_t  num)
{
  uint8_t  i ;
	
  lcd_set_pos(row,col);   
  for (i = 0; i < num;i++) {
	send_data(0x20); 
  }  
}


/******************************************************************** 
* 鍚嶇О : show_num
* 鍔熻兘 : 
* 杈撳叆 : uint8_t  row, uint8_t  col 璧峰鍦板潃 col=0,1,2,姣忎釜col鍗�16dot
* 杈撳嚭 : 鏃� 
* 璇存槑 : 鑷姩鎹㈣:lcm榛樿鎹㈣椤哄簭鏄贡鐨勶紝0--2--1--3--0
***********************************************************************/ 
void show_num(uint8_t  row, uint8_t  col, uint16_t num,uint8_t  DecOrHex)
{     
    char buf[16]; 
	
    if(DecOrHex==10)  
		sprintf(buf, "%d", num);
    else if(DecOrHex == 16)
		sprintf(buf,"%X",num);  
	
    lcd_show_strings(row,col,(uint8_t  *)(buf));
}

void lcd_dis_use_char(uint8_t row, uint8_t col,uint8_t index)
{
  lcd_set_pos(row, col);    //cgram char 鏄犲皠杈撳嚭鐨凞DRAM鍦板潃
  send_data(0x00);			//Must exist!
  send_data( (index-1)*2);	// cgram :00,02,04,06  绗琲ndex涓瓧绗﹀瓨鍌ㄥ湴鍧�鍋忕Щ閲�
}

void lcd_dis_image(const uint8_t *str)
{
   uint16_t i,j;
   
   send_cmd(0x36);	//缁樺浘鏄剧ず寮�锛屾墿鍏呮寚浠ら泦extended instruction(DL=8BITS,RE=1,G=1)
   delay_us(370);   //delay is important!
   
/*鏄剧ず涓婂崐灞忓唴瀹�*/
   for(i=0;i<32;i++)        
    { 
      send_cmd(0x80 + i);   
      send_cmd(0x80);       
      for(j=0;j<16;j++)
       {
         send_data(*str++);     
       }
    }

/*鏄剧ず涓嬪崐灞忓唴瀹�*/
   for(i=0;i<32;i++)        
    {
      send_cmd(0x80 + i); 
      send_cmd(0x88);     
      for(j=0;j<16;j++)
       {
         send_data(*str++);
       }
    }
  
}

void lcd_test_ban_dot(void)
{
   uint16_t i,j;
	
   /*缁樺浘鏄剧ず寮�锛屾墿鍏呮寚浠ら泦extended instruction(DL=8BITS,RE=1,G=1)*/
   send_cmd(0x36);	
   delay_us(370);  
   
   for(i=0;i<32;i++)       
    { 
      send_cmd(0x80 + i);  
      send_cmd(0x80);       
      for(j=0;j<16;j++)
       {
        send_data(0xaa);   
       }
    }

   for(i=0;i<32;i++)        
    {
      send_cmd(0x80 + i); 
      send_cmd(0x88);     
      for(j=0;j<16;j++)
       {
         send_data(0xaa);   
       }
    }
}



